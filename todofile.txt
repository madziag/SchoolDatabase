10/6/2022: We need to check if our test code handles the case where e.g. student starts in september but still has not made payment at the due date of the second scheduled payment. 
We need to see if next payment amount = installment amount (wrong) or 2 x installment amount (correct).
11/17/2022:
Consider changing next payment amount to something that is dynamically calculated rather than stored. 
We need the next payment amount to be correct if the student has not made any payment i.e missing several due dates. 
START FROM HERE -> test_insert_payment has been updated with contract 570. Giving error: 
"Next Payment Date and Amount for 570 entered NOT AS EXPECTED. NextPaymentDate: 2022-01-18NextPaymentAmount: 348.75" 
-> we do not take into account that a whole payment cycle has been missed!

11/24/2022: 
We're working on CalculateNextPayment (see line 94) - we're adding missed payments to amount due. We havent done anything yet on pay in full amounts


2/2/2023: There are 2 ideas currently in calculatenextPayment about what nextpayment means, The calculation calculates what is overdue while the tests look for the amount 
that is due at the next due date (whenever that is) the code needs to be reconciled to one of these two definitions) 
CONCEPT: 
-> Payment dates and Payment amount for those dates (payment schedule) - e.g. pay in full will have 3 - starter + 2 payments
-> Have a next amount due (next installment) and an total amount due (what has NOT been paid overall) total amount due vs total amount overdue example
    student does not pay in september and it is approaching november . Total amount due = november amount, total amount Overdue is September amount 
	Total amount contract
	Installments
	Installments paid or not
	Total amount due
	Total amount overdue
	Next payment (if the total amount overdue is not paid by the next payment date)
	
*** Files using CalculateNextPayment.php: 
1. InsertPayment.php
2. UpdateAmountDue.php
3. ExecuteInsertContract.php

** to contracts.php -> add amountOverdue Column




9/8/2022: 
in test_insertPayment we need to add contracts 567-569 to 7. Check if the update in the nextpayment table worked as expected (we need to change the code in nextpayment.php first for it to work. 
09/22/2022: We have added this to the test_insertpayment.php. next time we need to adjust in nextpayment.php


8/4/2022: 
- store payment of starter fee separately and consider first payment equal to starter fee to be applied to the starter fee (and not lessons)
- Add starter fee into the total amount due
- Adjust first payment with the starter fee 
--> subsequent payments need to be adjusted correctly depending on if starter fee is paid or not
- give user a place to enter the starter fee

File insertPayment.php:
-> check if student has starter checked on current contract
-> if starter box is checked -> check for any payments tagged starter. 
If total amount tagged starter < starter fee, then apply  difference between what has been paid and starter fee is applied to the lesson fee
e.g. starter fee = 100 , student pays 150. Then 100 of the 150 is applied to starter fee (is entered as a payment of type starter), and 50  is applied to lessons (typ = null)
e.g2. student has already paid 75 (tagged as starter) then pays 150 -> 25 will be tagged as starter, and 125 as null (for lessons)





28/7/2022: Check if we can find a php test framework!!!! 

4/13/2022:
2. Add a place to specify the book and the starter fee and then add them to the amount due. 
3. Add sensible error handling if drop down is not chosen (e.g. create contract page) 



Note:Can we pass in variables explicitly to an included php file? -> reason for failure will be known more obviously. 

### Updated concept -> At the beginning of the school year, user creates classes and assigns to each class a price, description and school year. 
When a student is entered, created classes are assigned to the student per school year, contract price is determined by the price assigned above.
If a discount is to be applied, the user manually does this at student level -> discount is entered -> subtracted from total owed. 

Updated TODO's:

1. To be looked into: when entering a typo e.g. in the studentid section on SearchRetrieve: ERROR IS NOT USER FRIENDLY:
Notice: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''580\' group by a.student_id' at line 1 in C:\Users\31653\Desktop\PhP\SearchRetrieve.php on line 94
Fatal error: Uncaught Error: Call to a member function fetch_array() on boolean in C:\Users\31653\Desktop\PhP\SearchRetrieve.php:95 Stack trace: #0 {main} thrown in C:\Users\31653\Desktop\PhP\SearchRetrieve.php on line 95

2. Create form for user to input new due dates; 

3. In ExecuteInsertContract.php: When it counts the number of classes, it does not take into consideration the location. In the DB we only have Zator entered. Need to add other locations with their respective schedules

4. When there is more than one class in the sql table we will select by class -- currently only one class available in db (classdates table in db, file = executeinsertcontract.php)

5. 'Not set' payment option -> needs to be handled correctly or removed?

6. No place to edit amount due for students, different than the normal amount due. 
-- user can manually reduce the amount the student has to pay. 
- if they have 4 consecutive absences then money is given back --- 

7. Create a page for user to be able to enter the current cost (setting page)
   
8. Create a page for user to be able to add/remove classes/classdates/location/ (for classdates table in db)
- include costs: starter costs + per semester costs (rates or onetime) per class/level/location (online or in person)
- Added category == flash card english (0-3) and preschool (maluchy/zerowka) - double check

Consider: 
	- How are the dates for the classes stored? Google calendar? Can it be exported and linked to the php?
	- Possibility of creating a calendar where she can put in the dates and the dates can be stored in the form of an array
	
9. Duplicate Contracts: 
-- if she decides to add contract regardless of duplicate then have a warning pop up -> 3 options: 
i. continue (will create duplicate contracts)
ii. edit current newly created contract 
iii. cancel the creation of the new contract, and edit existing contract 

10. Check box for new signed contract received: in individual contract page, if signed contract = no, then we should have a button to sign the contract
 
11. Undo signed option on the update contract page. 

12. What makes a student inactive? Need to be a way to change the students status to inactive/
ExecuteInsertContract.php should update student to 'active' when a contract is inserted (table Students in db)
- contract paid in full?
- end of school year?
- student drops out?
* Can be changed manually - update student
-- For inactive students (as per students table), if a new contract is added, the status should automatically update from inactive to active.

12. End contract option (if someone does not want to continue) - should be a contract end date (students give 1 months notice, should be able to be put in) 
- button for end contract + field to specify the date of the end of contract

13. Contracts on individual contract page (ShowContracts) should be sorted by date, newest first??

14. When entering new contract autofill (for existing students) location, level up and age group info

15. Group vs Individual lessons 
-- can a student be enrolled in more than 1 class silmultaneously -- more than 1 active contract => yes -- individual and group -- rarely
-- individual students have a contract for a unspecified amount of time. They can pay in advance for 4 or 8 lessons - this needs to be checked on before we start working on it. 

16. Implement fuzzy matching - partial searches of names 

17. automated email/text remainders -- contract & payment.

18. trim all input - consider other safety to prevent unwanted user entry input
19. Should we sort on any other columns in Contracts.php: First name? Start date? User to be informed: Sorting is done on only one column! 

20. Payments New Prices: http://www.englishdolinakarpia.pl/cennik/
-- implement online/local vs distant location classes

21. Ability to edit an existing contract (add a link to the update contract page (most likely from the individual contract page) (right now we can only access it when we create a new contract)

22. Guardians Name needs to be included****

23. Second semester changes every year. Every year the second semester starts in a different week (tury) -- there are 4 tury -- each wojewodstwo starts different tury - check on this
- Possibility to enter semester start dates when entering classdates/classes (or a more global settings page)
