1/12/2021: 
-> if nrpayments = 0 then paymentDueDate = contractCreationDate
-> if nrpayments > 0, then paymentDueDate depends on: 
		i. contract type (installments or pay in full)
		ii. paymentSettings
-> if nrpayments = 0 then paymountAmount can be:
		i. The payment setting amount
		ii. Or less (if students starts later than the default date)
-> if nrpayment > 0 the payment Amount should always be calculated as it depends on what the student has paid in the past

1/19/2021
*** FOR NEXT TIME -- use new nextpay values to sort values in contracts.php - reduce amount of code in contracts.php as we are now using data directly out of the db as opposed to calculating it on the fly in the php doc
*** We need to find other places where we use this same value and substitute it with using values dircetly from the db. 



1/5/2021: In ExecuteInsertContract.php: When it counts the number of classes, it does not take into consideration the location. In the DB we only have Zator entered. Need to add other locations with their respective schedules


Possible build test cases for next due date installments (contract.php)



10/27/2020:
In contracts.php
To calcuate next due date for installments: 
1. Normal case: Student pays on time so next due date is based on the number of payments left
2. Case where they pay earlier than due date -> if amount left = 225 then last date in the array
if 2 x costperinstallment -> 2nd last date; if 3 x costperinstallment -> 3rd last date in the array. If amount > costperinstallment x nr of dates in the array then = contract creation date
3. Payment is overdue: How many payments overdue are there -> check in db for the previous due date 
Can also track payment due date per student**** 

Amount due/nr payments = nr of normal installment payment

10/20/2020:
ExecuteInsertContract: Testing of dates for payment counts

### Scenarios ###

1. Installments
- Normal start - Feb 1
- Late Start - Feb 28
- Start today
2. Pay in full
- Normal start - Feb 1
- Late Start - Feb 28
- Start today

10/6/2020:
When there is more than one class in the sql table we will select by class -- currently only one class available in db (classdates table in db, file = executeinsertcontract.php)

9/30/2020:
Calculate the amount due by using the number of lessons (we are currently using months). Needs to be changed in executeinsertcontract.php. 
Once done, we need to make sure that amount due for next payment is calculated correctly in contracts.php
'Not set' payment option -> needs to be handled correctly or removed?

9/23/2020

No place to edit amount due for students, different than the normal amount due. 
-- if contract start is later, are the contract amounts, lesson count, nrpayments generated correctly?
-- implement discounting - user can manually reduce the amount the student has to pay, also group be able to implement group discount. 

Calculate correct payment due date. 


9/15/2020:
Do more testing on scenario on next due amount:

Pay In Full Cases
case 1: 2 semesters, paid-in-full price
case 2: 1 semester; paid-in-full price
case 3: 2 semesters, 1st semester cheaper
case 4: 1 semester, cheaper
case 5: 2 semesters; paid in full price, sem 1 is paid
case 6: 2 semesters, pay in full price, 1st semester cheaper & paid

Installment Cases
case 1: 2 semesters, pay in installments price
case 2: 1 semester, pay in installment price
case 3: 2 semesters, 1st semester: 1st installment cheaper - 45, next 90
case 4: 2 semesters, late start - 9 installments (instead of usual 10)
case 5: 2 semesters, x nr of installments paid
case 6: 1st payment is less, but has been paid 
case 7: 1st payment is less, 2nd payment is normal, both have been paid



9/2/2020:
-- consider extending settings to include locations and levels of classes. 
-- used new settings to calculate correct payments  --> CONTINUE FOR NEXT TIME (CONTRACTS.PHP)


7/14/2020: 

-- NEXT STEP: Create a page for user to be able to enter the current cost (setting page), 
   create a table where settings are stored, and be able to use this information in executeinsertcontract(total amount)

6/9/2020: Make InsertPayment page work. Currently it only echos the student and contract ID
-- Currently the payment amount does not change regardless of the contract number, 
we need to make the payment amount value dependent on the contract number


*** 5/12/2020: Dealing with nulls e.g. can book or starter kit be null

5/26/2020: To prevent duplicate contracts: 
-- display current contracts/In create contract -> show all active contracts (for the current date or unpaid)
-- if she decides to add contract regardless of duplicate then have a warning pop up -> 3 options: 
i. continue (will create duplicate contracts)
ii. edit current newly created contract 
iii. cancel the creation of the new contract, and edit existing contract 

-- Instead of hardcoding payment amounts in contracts.php, create a settings page through which the user is able to change the values herself. 

-- Get to contracts not signed, with signed button (contracts page - next to update link?)

1/7/2020:
Contracts
-- Main contract page should show only active contracts 
-- For inactive students (as per students table), if a new contract is added, the status should automatically update from inactive to active. 
-- Individual contract page should show all contracts, active and inactive (grey out?)/Does a student have old unpaid contracts? 
   These contracts should be sorted by date, with the newest on the top
-- Get location, level and age group info => autofill with previous info (level up) for existing students
-- Check box for new signed contract received: in individual contract page, if signed contract = no, then we should have a button to sign the contract

Payments 
-- Enter Payments Area: Implement option that pinpoints which contract is being paid for (if previous contract has not be paid in full) -- 
   if payment given, it should go to the oldest due bill)
-- Nr of payments determined by number of months remaining in school year: paid in full = per semester
-- Amount due determined by number of months remaining in school year
-- If there is record in table payments, contract.php next due date shows as Paid which is incorrect 
-- Interface to input amounts due and paid
-- search for students with payment due -- contracts.php via sort buttons

Other
-- Group vs Individual lessons 
-- Implement fuzzy matching
-- Interface for entering new classes (locations, age groups, levels, class dates)
   Consider: 
	- How are the dates for the classes stored? Google calendar? Can it be exported and linked to the php?
	- Possibility of creating a calendar where she can put in the dates and the dates can be stored in the form of an array
-- Insert same student by 2 different users/ 2 users trying to isert students at te same time: shared network drive/webserver -- /remote desktop
-- automated email remainders -- contract & payment.
-- trim all input - consider other safety to prevent unwanted user entry input
-. Should we sort on any other columns in Contracts.php


===================================================================================================================================================
12/10/2019: THESE QUESTIONS NEED TO BE ANSWERED BEFORE WE PROCEED WITH CONTRACTS.PHP
***  is it possible for a contract to start in Sept and shorter than 1 school year -- ask IZA ===> yes, students can resign, have to give 1 month advance
Students pay one month in advance
*** if lessons cannot be done -> refund (possibly manually -- how often does this happen? Is it possible to do this by hand? --IZA => can be done manually
-- interface where she can manually adjust payment due 
*** can a student be enrolled in more than 1 class silmultaneously -- more than 1 active contract => yes -- individual and group -- rarely
--- what is the actual total amount -- are books and starter pack included? yes
	total = book= 50 + sp = 50
	1st rata incldes the sp /book/ 1st month = 196 (100 + 96) 96 => 6 lessons per month
	paidin full = 450 + 50 + 50
	maluchy = 50 zl per month, 1 x  week = 15 lessons per sem 16.66 zl per lesson/250 total/calosc 15.30 * 15 = 230
	adults = 17zl * 30 = 510 /calosc 16 * 30 (480)

-- Link class level to new contract. When contract is updated, the class level should be updated as well -- option to manually adjust to different level.
-- is there a group level hierachy. Every level, different locations?
-- billing lower amounts e.g. 60 -- discount or partial payment?
-- set of possible payment schedules she stay to.
-- which classes have a book fee -- option to join with kalss
-- why some students have starter pack and others not?
-- do students change locations when they go up a level - relationship between groups and locations. how many locations do they have?
select class and location together or separately? what does klas 3/2 mean?
-- contract.php table?
-- add notes column mysql -- archive old notes instead of delete??
-- individual students -- 2 students, 1 row (sylwia Majkut? who pays. Do students prepay or pay after the lessons. is there a contract?
1. Guardians Name needs to be included
2. For groups, contract is from September 1 to June 30 -> sometimes groups will start in Feb --> umowa Feb 1 -> JUne 30
3. Individuals -> Umowa nieukreslona, payment z gory 4 or 8 lessons. 
4. Second semester changes every year. Every year the second semester starts in a different week (tury) -- there are 4 tury -- each wojewodstwo starts different tury 
1-2 nd start in January, 3-4 start in feb. 2020 - is 3rd, 2021 will be 4th 2022 - 1, 2023 -2. 1st semester always september - can we just write first and second semester instead
5. Added category == flash card english (0-3) and preschool (maluchy/zerowka)


=======================================
$myfile = fopen("newfile.txt", "w") or die("Unable to open file!");
fwrite($myfile, $sql);
fclose($myfile);
